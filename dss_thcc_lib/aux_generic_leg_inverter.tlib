//
// Saved by sw version: 2023.3 DEV
//

library "OpenDSS" {

    component Subsystem Root {
        component Category Auxiliary {
            layout = dynamic
            component Subsystem "Generic Leg Inverter (avg)" {
            layout = dynamic
            component "core/Signal Controlled Voltage Source" Vsrc {
            }
            [
                position = 7304, 8104
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Iout {
                execution_rate = "ts"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 7400, 7960
                size = 64, 32
            ]

            component "core/Series RLC Branch" RL1 {
                branch_type = "RL"
                num_phases = "Single-Phase"
                inductance = "rl1_inductance"
                resistance = "rl1_resistance"
            }
            [
                position = 7584, 7960
                size = 128, 100
            ]

            component "core/Voltage Measurement" Vout {
                execution_rate = "ts"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8136, 8104
                rotation = right
                size = 64, 32
            ]

            component "core/Open Circuit" RC {
            }
            [
                position = 7728, 8104
                rotation = right
            ]

            component "core/Short Circuit" RL2 {
            }
            [
                position = 7880, 7960
            ]

            component "core/Single Non-Ideal Contactor" S1 {
                ctrl_src = "Model"
                resistance = "sw_r"
                signal_access = "Inherit"
            }
            [
                position = 8000, 7960
                size = 64, 32
            ]

            port L {
                position = right:1
                kind = pe
            }
            [
                position = 8328, 7960
                scale = -1, 1
            ]

            port N {
                position = left:1
                kind = pe
            }
            [
                position = 7728, 8288
                rotation = left
                scale = -1, 1
            ]

            port mod {
                position = top:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7680, 7712
            ]

            port Imeas {
                position = top:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7800, 7768
            ]

            port Vmeas {
                position = top:4
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7800, 7816
            ]

            port sw {
                position = top:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7936, 7880
            ]

            tag Goto1 {
                value = "mod"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7800, 7712
                hide_name = True
                size = 60, 20
            ]

            tag mod_L1 {
                value = "mod"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7152, 8104
                size = 60, 20
            ]

            tag Iout_goto {
                value = "Iout"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 7896
                size = 60, 20
            ]

            tag Vout_goto {
                value = "Vout"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8216, 8104
                size = 60, 20
            ]

            tag From1 {
                value = "Iout"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7680, 7768
                hide_name = True
                size = 60, 20
            ]

            tag From4 {
                value = "Vout"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7680, 7816
                hide_name = True
                size = 60, 20
            ]

            junction Junction1 pe
            [
                position = 8136, 7960
            ]

            connect Iout.p_node Vsrc.p_node as Connection1
            connect Vsrc.n_node N as Connection7
            connect Vout.n_node N as Connection8
            connect mod Goto1 as Connection100
            connect From1 Imeas as Connection101
            connect Vmeas From4 as Connection102
            connect Vsrc.in mod_L1 as Connection103
            connect Iout.out Iout_goto as Connection104
            connect Vout_goto Vout.out as Connection105
            connect RC.n_node N as Connection108
            connect RL2.n_node S1.a_in as Connection110
            connect Vout.p_node Junction1 as Connection112
            connect Junction1 S1.a_out as Connection113
            connect L Junction1 as Connection114
            connect sw S1.ctrl_in as Connection115
            connect Iout.n_node RL1.P1_pos as Connection116
            connect RL2.p_node RL1.P1_neg as Connection120
            [
                breakpoints = 7728, 7960
            ]
            connect RC.p_node RL1.P1_neg as Connection121

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                filter_type {
                    label = "Filter Type"
                    widget = combo
                    combo_values = "L", "LC", "LCL"
                    type = string
                    default_value = "L"
                    no_evaluate

                    CODE property_value_changed
                        comp_script = return_comp_script(mdl, container_handle)
                        comp_script.circuit_dynamics(mdl, container_handle, caller_prop_handle=prop_handle)
                        comp_script.mask_dialog_dynamics(mdl, container_handle, caller_prop_handle=prop_handle)
                    ENDCODE

                    CODE property_value_edited
                        comp_script = return_comp_script(mdl, container_handle)
                        comp_script.mask_dialog_dynamics(mdl, container_handle, caller_prop_handle=prop_handle)
                    ENDCODE
                }

                rl1_resistance {
                    label = "Resistance RL1 Branch"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "立"
                }

                rl1_inductance {
                    label = "Inductance RL1 Branch"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "H"
                }

                rc_resistance {
                    label = "Resistance RC Branch"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "立"
                    nonvisible
                }

                rc_capacitance {
                    label = "Capacitance RC Branch"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "F"
                    nonvisible
                }

                rl2_resistance {
                    label = "Resistance RL2 Branch"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "立"
                    nonvisible
                }

                rl2_inductance {
                    label = "Inductance RL2 Branch"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "H"
                    nonvisible
                }

                sw_r {
                    label = "Switch Resistance"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "立"
                }

                ts {
                    label = "Execution Rate"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "s"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog

                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()

                ENDCODE

                CODE init
                    import importlib

                    import dss_thcc_lib.component_scripts.comp_inv_leg as comp_script
                    importlib.reload(comp_script)
                    def return_comp_script(mdl, item_handle):
                        return comp_script

                ENDCODE
            }
        }
            [
                position = 7696, 8024
                size = 128, 56
            ]
        }
        [
            position = 4528, 4208
            size = 176, 104
        ]
    }

    default {
    }
}
